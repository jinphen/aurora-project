<?xml version="1.0" encoding="UTF-8"?>
<ss:schema xmlns:ss="http://www.uncertain-framework.org/schema/simple-schema" xmlns:la="org.lwap.action">
	<ss:elements>
		<ss:element name="la:array-to-map" document="将Oracle PL/SQL的struct转换为CompositeMap。struct变量可通过PL/SQL package返回">
			<ss:attributes>
				<ss:attribute name="array_path" document="PL/SQL struct类型的变量所在的XPath路径"/>
				<ss:attribute name="result_path" document="转换后的CompositeMap所在的XPath路径"/>
			</ss:attributes>
			<ss:extensions>
				<ss:extension base="AbstractAction"/>
			</ss:extensions>
		</ss:element>
		<ss:element name="la:set-cookie" document="设置一个cookie">
			<ss:attributes>
				<ss:attribute name="name" document="cookie的名称，支持${}"/>
				<ss:attribute name="value" document="cookie的值，支持${}"/>
				<ss:attribute name="maxAge" document="cookie的有效时间"/>
			</ss:attributes>
			<ss:extensions>
				<ss:extension base="AbstractAction"/>
			</ss:extensions>
		</ss:element>
		<ss:element name="la:join" document="将两个CompositeMap的子节点列表合并在一起，类似sql对两个表的join">
			<ss:attributes>
				<ss:attribute name="list1" document="第一个CompositeMap的XPath路径，join后的结果也将存放在这里"/>
				<ss:attribute name="list2" document="第二个CompositeMap的XPath路径"/>
				<ss:attribute name="keys" document="用逗号分隔的，用于join的字段名"/>
			</ss:attributes>
			<ss:extensions>
				<ss:extension base="AbstractAction"/>
			</ss:extensions>
		</ss:element>
		<ss:element name="la:load-xml" document="将xml文件装载为CompositeMap">
			<ss:attributes>
				<ss:attribute name="source_file" document="要装载的xml文件名，支持${}"/>
				<ss:attribute name="source_path" document="要装载的xml文件所在的目录"/>
				<ss:attribute name="destination" document="用逗号分隔的，用于join的字段名"/>
				<ss:attribute name="collapse" document="如果设置为true，就将xml文件中的&lt;key&gt;value&lt;/key&gt;转换成上级节点的key=&quot;value&quot;形式"/>
			</ss:attributes>
			<ss:extensions>
				<ss:extension base="AbstractAction"/>
			</ss:extensions>
		</ss:element>
		<ss:element name="la:matrix-flat-transform" document="将包含多个属性的一条记录(如 key1=value1 key2=value2)转换成固定属性结构的多条记录(如key=key1 value=value1; key=key2 value=value2)。转换后的记录，包含名为key和value的两个属性，分别对应原始记录中的一个属性及值">
			<ss:attributes>
				<ss:attribute name="column_config_path" document="包含所有可能的字段名的一个CompositeMap形式记录集的XPath路径" use="required" />
				<ss:attribute name="column_field_name" document="在column_config_path指定的记录集中，用于放置字段名的字段名称"  use="required" />
				<ss:attribute name="source_data_path" document="要转换的原始记录所在的XPath路径"  use="required" />
				<ss:attribute name="key_fields" document="在原始记录中，用于唯一区分每条记录的字段名。如果是多个字段联合标识一条记录，则用逗号分开"  use="required" />
				<ss:attribute name="key_name" document="生成的新记录中，用于放置原始字段名的字段名称，缺省为key" />
				<ss:attribute name="value_name" document="生成的新记录中，用于放置原始字段值的字段名称，缺省为value" />
			</ss:attributes>
			<ss:extensions>
				<ss:extension base="AbstractAction"/>
			</ss:extensions>
		</ss:element>

		<ss:element name="la:session-clear" document="清除session，去掉所有登录信息" />

		<ss:element name="la:session-write" document="向session中写入信息">
			<ss:attributes>
				<ss:attribute name="source" document="要写入session的数据源字段的XPath路径。如果为空，则取context中/session对应的CompositeMap"/>
				<ss:attribute name="target" document="向session中写入时所用的属性名。如果为空，则将source对应的CompositeMap中所有的属性/值写入session。如果source对应的对象不是CompositeMap则抛出异常"/>
			</ss:attributes>
			<ss:extensions>
				<ss:extension base="AbstractAction"/>
			</ss:extensions>
		</ss:element>
		
	</ss:elements>
</ss:schema>
