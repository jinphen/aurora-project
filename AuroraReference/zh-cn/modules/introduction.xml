<chapter id="introduction">
    <title>Aurora 框架简介</title>
    <sect1 id="introduction-info"  revision="1">
        <title>前言</title>
      <para>Aurora是一个基于J2EE的Web应用开发框架，主要面向企业应用。在介绍Aurora框架之前，我们先看看用Aurora开发出来的应用实例。鉴于企业应用通常都不会像J2EE宠物商店那么简单，我们将选择一个典型的业务：销售订单，来作为演示场景。我们的示例程序包括以下几个界面：销售订单录入，销售出库，销售订单查询。请点击此处查看在线演示程序：</para>

    <para><ulink url="http://aurora.hand-china.com/demo/">浏览器中打开</ulink></para>
	
    <para>从应用开发者的角度，Aurora与其它框架的最大区别，就是大多数功能都是通过XML配置文件，而不是Java代码来实现的。实际上，Aurora可以看做是一个配置解析器，通过解析配置文件来实现各种功能。我们以【销售订单】这个演示界面为例，说明在Aurora框架下应用程序是如何开发出来的。</para>

    <mediaobject>
                <imageobject role="fo">
                    <imagedata fileref="images/introduction/demo.png" format="png" width="370" depth="247" contentwidth="370" contentdepth="247"/>
                </imageobject>
                <imageobject role="html">
                    <imagedata fileref="../shared/images/introduction/demo.png" format="png"/>
                </imageobject>
    </mediaobject>
    

    <para>首先我们来看前端界面部分。用户所访问的每一个界面（我们可以在demo系统中看到的.screen链接），都对应一个XML格式的配置文件，它在server端被解析，产生HTML输出，生成供浏览器展示的UI。以[查询界面]为例，按各种条件查询数据，点击某条记录能够在一个弹出窗口中编辑数据，像这样一个典型的企业应用界面，其源代码如下：</para>

    <programlisting><![CDATA[                
<a:screen xmlns:a="http://www.aurora-framework.org/application" trace="true">
    <a:init-procedure>
    	...
    </a:init-procedure>
    <a:view>
        <a:link id="ord_sales_order_create_screen" url=".....screen"/>
        <a:link id="lk_header_close" url="....svc"/>
        <script>...</script>
        <a:dataSets>
            <a:dataSet id="ord_order_status_ds" lookupCode="SALE_ORD_STATUS"/>
            ....
        </a:dataSets>
        <a:screenBody>
            <a:form column="1" title="查询订单">
                <a:hBox labelWidth="100">
                    <a:textField name="order_number" bindTarget="..." prompt="订单号"/>
                    <a:lov name="customer_lov" bindTarget="..." prompt="客户"/>
                    <a:hBox labelSeparator="" width="240">
                        <a:button click="btn_query_order_header" prompt=" " text="HAP_QUERY"/>
                        <a:button click="btn_reset_query_ds" text="HAP_RESET"/>
                    </a:hBox>
                </a:hBox>
               ...
            </a:form>
            <a:hBox/>
            <a:grid bindTarget="ord_sales_order_headers_ds" height="350" navBar="true" width="1000">
                <a:columns>
                    <a:column name="order_number" prompt="订单号"  width="150"/>
              		...
                    <a:column name="closed_flag" editor="e_cb" prompt="关闭" width="40"/>
                </a:columns>
                <a:editors>
                    <a:checkBox id="e_cb"/>
                </a:editors>
                <a:toolBar>
                	...
                    <a:button click="btn_close_order" icon="..." text="关闭"/>
                </a:toolBar>
            </a:grid>
        </a:screenBody>
    </a:view>
</a:screen>
                ]]></programlisting>

    <para>源文件在&lt;init-procedure&gt;部分说明如何获取该界面所需的数据（我们将在后面对其原理进行更详细的介绍），&lt;view&gt;部分说明整个界面是如何用基本的UI组件构建而成。例如，通过&lt;dataset&gt;组件，我们声明了在客户端端存储的数据集，以便实现主从数据联动、记录在客户端的新增修改删除、有效性校验等功能，并将它与后台提供实际数据存储服务的URL关联在一起；通过&lt;grid&gt;组件，我们以表格的形式将dataset中的数据展示出来，并提供编辑的功能；通过&lt;lov&gt;组件，我们可以提供对海量数据进行选择的组件，并支持auto-complete特性。</para>

    <para>在上面的例子中，我们通过这几个配置文件，就可以完成一个典型的应用界面。虽然Aurora是基于J2EE的开发框架，但这个通过Aurora开发的应用程序没有一行Java代码。Aurora也提供了基于Eclipse的IDE，可对这些配置文件进行快速创建、可视化编辑，并提供语义有效性检查，能在很大程度上消除配置错误引发的问题。在IDE专题部分会有更详细的介绍。</para>

    <mediaobject>
                <imageobject role="fo">
                    <imagedata fileref="images/introduction/ide.png" format="png" width="370" depth="247" contentwidth="370" contentdepth="247"/>
                </imageobject>
                <imageobject role="html">
                    <imagedata fileref="../shared/images/introduction/ide.png" format="png"/>
                </imageobject>
    </mediaobject>
    </sect1>
    <sect1 id="introduction-svn"  revision="1">
        <title>SVN地址</title>
        <para>
        Aurora的所有代码托管在Google Code。
        </para>
        <itemizedlist>
            <listitem>
            <para>
               Uncertain  
            </para>
            <para>
               https://aurora-project.googlecode.com/svn/trunk/uncertain
            </para>
            </listitem>
            <listitem>
            <para>
               Aurora
            </para>
            <para>
              https://aurora-project.googlecode.com/svn/trunk/aurora
            </para>
            </listitem>
            <listitem>
            <para>
               Aurora UI
            </para>
            <para>
              https://aurora-project.googlecode.com/svn/trunk/AuroraUI
            </para>
            </listitem>
        </itemizedlist>
    </sect1>         
</chapter>
